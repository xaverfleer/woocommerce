name: Send a Slack notification when a PR is a release highlight

on:
  pull_request_target:
    types: [labeled]

permissions: {}

jobs:
  send-slack-notification-when-release-highlight-pr:
    if: "${{ github.event.label.name == 'release: highlight' && (github.event.pull_request.state == 'open' || github.event.pull_request.merged) }}"
    runs-on: ubuntu-20.04
    steps:
      - name: Wait 2 minutes for other labelling jobs to finish
        run: sleep 2m
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Calculate test date
        id: calculate_date
        run: |
          #!/bin/bash
          
          # Get the day of the week of the merged PR (0 for Sunday, 1 for Monday, etc.)
          MERGE_DAY_OF_WEEK=$(date -u -d "${{ github.event.pull_request.merged_at }}" +"%u")
          
          # Calculate days until the next Thursday after the merge
          # If the merge is on Thursday, this will give 7 (i.e., next week's Thursday)
          DAYS_UNTIL_NEXT_THURSDAY=$(( (4 + 7 - MERGE_DAY_OF_WEEK) % 7 ))
          
          # If DAYS_UNTIL_NEXT_THURSDAY is 0, the merge was on a Thursday, so we set it to 7 to get the next Thursday
          if [ $DAYS_UNTIL_NEXT_THURSDAY -eq 0 ]; then
            DAYS_UNTIL_NEXT_THURSDAY=7
          fi
          
          # Calculate the date for the next Thursday after the merge
          THURSDAY_AFTER_MERGE=$(date -u -d "${{ github.event.pull_request.merged_at }} + $DAYS_UNTIL_NEXT_THURSDAY days" +"%Y-%m-%d")
          WOOAF_RELEASE_DATE=$(date -u -d "${THURSDAY_AFTER_MERGE} + 5 days" +"%Y-%m-%d")
          TEST_DATE_MESSAGE="Thursday, $THURSDAY_AFTER_MERGE. (Targeting release on $WOOAF_RELEASE_DATE)"
          echo "TEST_DATE_MESSAGE=${TEST_DATE_MESSAGE}" >> $GITHUB_ENV

      - name: Determine Milestone Date
        id: get_milestone_date
        working-directory: .github/workflows/scripts
        run: bash determine_milestone_date.sh
        env:
          GITHUB_EVENT_PATH_PULL_REQUEST_MILESTONE_TITLE: ${{ github.event.pull_request.milestone.title }}

      # Notify Slack Step
      - name: Notify Slack
        uses: archive/github-actions-slack@d9dae40827adf93bddf939db6552d1e392259d7d
        id: notify
        with:
            slack-bot-user-oauth-access-token: ${{ secrets.TEST_ASSISTANCE_BOT_TOKEN }}
            slack-channel: ${{ secrets.WOO_CORE_RELEASES_HIGHLIGHTS_SLACK_CHANNEL }}
            slack-text: |
                <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>
                *Labels:* ${{ join(github.event.pull_request.labels.*.name, ', ') }}
                *Monthly Release Milestone:* <${{ github.event.pull_request.milestone.html_url }}|${{ github.event.pull_request.milestone.title }}> (Release Date: ${{ env.MILESTONE_DATE }})
            slack-optional-unfurl_links: false
            slack-optional-unfurl_media: false
